Nathan Taylor Solo Project - "Windows TextP"

Stack: Python/Flask
GitHub Repository:https://github.com/Ploopy157/Solo-Project-WindowsTextP
Wireframe Link: https://share.balsamiq.com/c/jAqzczVeowHTxS3NqknaHh.jpg File also in repo
Bonus Features: Responsiveness, File Upload

Summary: A Simple Note Taker, with Windows XP Styling
	Users can use CRUD for different kinds of text files, which dictate the editability and the view that renders when you open a file.

	Validations and full CRUD Functionality will be in the Users table, with an option after making the account to upload a custom Image,
	Change your Username/Password, and extra Requirements that the First account made and the Last account left Must be an Administrator. 

	Files will have: name, text, file_type, and is_shared values that the user can edit. Name and File Type are required, IsShared is Boolean,
 	though all the stats will be Visible in the file's "update" page. ("Properties")

All Users Can see all Shared Files, Only Administrators can Edit/Delete Shared Files that aren't their own.

Create, read, update and delete for files and users, First/Last user must be an Administrator, deleted User's files are deleted.

Views: 
	Login/Registration: 
	Logins will be listed on the side, you will have so select your Username from a list, rather than type it in. 
	
	All Pages: Standard Background, When You click the "Task Bar", it opens up a turns on a "logout" <div>, that Displays your Name and Profile Picture.
	This will be in the place of a standard Header.
	
	Home: 
	Lists Other Views: "Edit Users", "Shared Files", My Files" Each Button Requires Double Click.
	

	Edit Users: List with at least RUD for Users
	This is where you get the option to upload an image, an admin account can change other user's info, and make them admins as well.
	If Deleting Users, Last User Must be an Admin, If You delete Yourself, You will be logged Out.
	When a User is Deleted, so are all of their files.
	
	Shared files: a List of All files where IsShared == True, Only Admins can delete files that they did not create.

	My Files: A List of only the logged in user's files Also has a button to create a new file. (I might try and make this a Right-Click)
	You Select the File Type and Name when this button is hit. To change the "Data" you have to "open" The File.

	File: get one file, Opens a single File and has Edit Functionality for Data, Name, and IsShared.
	File will have different views depending on the File Type of Text, Richtext, or PDF
	You Cannot edit a PDF's text, but you can change another file to it.

	Properties: Lets You Change Name, File Type, and Is Shared, Delete Button. Also Lists Created at, Updated at, and creator. 
	All Users Can View, Only the Creator and Admin can edit.
	

Database:
	Users: username(varchar), password(text), is_admin(bool), profile_picture(Image/Link)(This is the thing I have to learn), created_at(DATETIME), updated_at(DATETIME)

	Files: name(varchar), text(LongText), FileType(varchar), is_shared(Bool), user_id(INT- Foreign Key), created_at(DATETIME), updated_at(DATETIME)

Validations:
	Users: Name is Required, Name Less than 20 Characters, No Numbers/Special Characters in Name,.
	Password is Reqired, PW and ConfirmPW Must Match, Password must be a minimum of 6 Characters.
 	Pasword Must have 1 Special Character and 1 Number.
	First User Must be an Admin!
	(Image is not required, as it is changed after Login, and will have a default Fallback)

	Files: Name is Required, Name cannot contain Special Characters, 
	(Cannot be edited unless you are the User_id or your User is an Administrator.)


Future Plans:
	More File types such as Spreadsheets, "apps" such as a Google Maps API or a stat counter for my ROBLOX game,  or games, like Minesweeper or Memory Match (Could use an API for random images)





